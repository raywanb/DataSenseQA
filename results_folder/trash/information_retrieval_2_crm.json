[
    {
        "question": "How many people closed the deal for 'GTX Plus Basic'?",
        "ground_truth": "30 people",
        "derivation": "len(sales_pipeline_df[sales_pipeline_df['product'] == 'GTX Plus Basic']['sales_agent'])",
        "difficulty": "easy",
        "subtype": "Direct Value Retrieval",
        "type": "information retrieval",
        "table_path": "./datasets/business/crm/",
        "result": "30 people (unique sales agents) closed deals for the 'GTX Plus Basic' product.\n\nTo break this down:\n- I filtered the opportunities dataframe (df3) for 'GTX Plus Basic' deals\n- I counted the unique sales agents who closed these deals\n- The result shows 30 distinct sales agents were involved in closing 'GTX Plus Basic' deals"
    },
    {
        "question": "Which account in the accounts table has the highest close value for deals in the sales_pipeline table?",
        "ground_truth": "Groovestreet, $30,288",
        "derivation": "merged_data = sales_pipeline_df.merge(accounts_df, left_on='account', right_on='account'); highest_close_value_account = merged_data.loc[merged_data['close_value'].idxmax(), ['account', 'close_value']]",
        "difficulty": "medium",
        "subtype": "Direct Value Retrieval",
        "type": "information retrieval",
        "table_path": "./datasets/business/crm/",
        "result": "The account with the highest close value is Groovestreet, with a close value of $30,288. \n\nKey details:\n- Account: Groovestreet\n- Sector: Retail\n- Close Value: $30,288\n- Sales Agent: Rosalina Dieter\n- Product: GTK 500\n- Deal Stage: Won\n- Close Date: 2017-06-07\n\nThe result was obtained by merging the accounts table (df2) with the sales pipeline table (df3) on the 'account' column, and then finding the row with the maximum 'close_value'. This approach allows us to connect the account information with its corresponding sales deal details and identify the most valuable deal."
    },
    {
        "question": "Who is the manager of the sales agent responsible for the highest revenue-generating opportunity in the sales_pipeline table?",
        "ground_truth": "agent: Rosalina Dieter, manager: Celia Rouche",
        "derivation": "highest_revenue_opportunity = sales_pipeline_df.loc[sales_pipeline_df['close_value'].idxmax()]; highest_revenue_agent = highest_revenue_opportunity['sales_agent'];agent_manager = sales_teams_df[sales_teams_df['sales_agent'] == highest_revenue_agent]['manager'].iloc[0]",
        "difficulty": "hard",
        "subtype": "Direct Value Retrieval",
        "type": "information retrieval",
        "table_path": "./datasets/business/crm/",
        "result": "Celia Rouche is the manager of the sales agent (Rosalina Dieter) responsible for the highest revenue-generating opportunity in the sales pipeline, which was a GTK 500 product sale to Groovestreet with a close value of $30,288.\n\nLet me break down the steps I took:\n1. Used `df3.loc[df3['close_value'].idxmax()]` to find the opportunity with the highest close value\n2. Identified the sales agent as Rosalina Dieter\n3. Used `df4[df4['sales_agent'] == 'Rosalina Dieter']['manager'].values[0]` to find her manager, which is Celia Rouche"
    },
    {
        "question": "List all products from the products table with a sales price above $1000 that are part of a 'Won' deal in the sales_pipeline table.",
        "ground_truth": "MG Advanced, GTX Plus Pro, GTX Plus Basic, GTK 500",
        "derivation": "high_price_products = products_df[products_df['sales_price'] > 1000];won_deals = sales_pipeline_df[sales_pipeline_df['deal_stage'] == 'Won'];products_in_won_deals = won_deals['product'].unique()",
        "difficulty": "easy",
        "subtype": "Conditional Retrieval and Filtering",
        "type": "information retrieval",
        "table_path": "./datasets/business/crm/",
        "result": "The products with a sales price above $1000 that are part of a 'Won' deal are: GTX Plus Basic, GTX Plus Pro, MG Advanced, and GTK 500."
    },
    {
        "question": "Identify number of accounts in the accounts table that are subsidiaries and have at least one deal in the 'Won' stage in the sales_pipeline table.",
        "ground_truth": "15 accounts",
        "derivation": "subsidiary_accounts = accounts_df[accounts_df['subsidiary_of'].notna()];subsidiaries_with_won_deals = subsidiary_accounts[subsidiary_accounts['account'].isin(won_deals['account'].unique())]; len(subsidiaries_with_won_deals)",
        "difficulty": "medium",
        "subtype": "Conditional Retrieval and Filtering",
        "type": "information retrieval",
        "table_path": "./datasets/business/crm/",
        "result": "15 accounts are subsidiaries and have at least one deal in the 'Won' stage.\n\nTo provide additional context:\n- These accounts include companies like 'Funholding', 'Treequote', 'Nam-zim', 'Dalttechnology', and others.\n- This means these 15 subsidiary companies have successfully closed deals in the sales pipeline.\n\nWould you like me to elaborate on any part of the analysis or provide more details about these accounts?"
    },
    {
        "question": "List all regional offices with agents handling accounts in the 'technology' sector with 'Lost' deals.",
        "ground_truth": "0 office",
        "derivation": "technology_lost_accounts = accounts_df[accounts_df['sector'] == 'technology']['account']; lost_deals_agents = sales_pipeline_df[(sales_pipeline_df['deal_stage'] == 'Lost') & (sales_pipeline_df['account'].isin(technology_lost_accounts))]['sales_agent']; regional_offices = sales_teams_df[sales_teams_df['sales_agent'].isin(lost_deals_agents)]['regional_office'].unique()",
        "difficulty": "hard",
        "subtype": "Conditional Retrieval and Filtering",
        "type": "information retrieval",
        "table_path": "./datasets/business/crm/",
        "result": "The regional offices with agents handling accounts in the 'technology' sector with 'Lost' deals are: Central, East, and West.\n\nLet me provide some additional context to verify this:\n\n- The technology sector in this dataset is represented by 'Acme Corporation'\n- The code looked for lost deals specifically for technology sector accounts\n- It then traced those deals back to their sales agents\n- And finally mapped those agents to their regional offices\n\nWould you like me to elaborate on any part of the analysis?"
    },
    {
        "question": "Calculate the total revenue generated by Won deals.",
        "ground_truth": "10,005,534",
        "derivation": "sales_pipeline_df[sales_pipeline_df['deal_stage'] == 'Won']['close_value'].sum()",
        "difficulty": "easy",
        "subtype": "Multi-Column Analysis and Summarization",
        "type": "information retrieval",
        "table_path": "./datasets/business/crm/",
        "result": "The total revenue generated by Won deals is $10,005,534.00. This was calculated by:\n1. Merging the opportunities and accounts dataframes\n2. Filtering for deals with 'Won' status\n3. Summing the 'close_value' column\n\nAdditional insights:\n- Total number of won deals: 4,238\n- Average deal value: $2,360.91\n\nThe calculation provides a clear picture of the revenue generated from successful sales opportunities, showing the total monetary value of deals that were closed and won."
    },
    {
        "question": "Summarize the total revenue generated per sector based on 'Won' deals.",
        "ground_truth": "employment: $436,174.00, entertainment: $689,007.00, finance: $950,908.00, marketing: $922,321.00, medical: $1,359,595.00, retail: $1,867,528.00, services: $533,006.00, software: $1,077,934.00, technolgy: $1,515,487.00, telecommunications: $653,574.00",
        "derivation": "won_deals = sales_pipeline_df[sales_pipeline_df['deal_stage'] == 'Won']; merged_data = won_deals.merge(accounts_df, on='account'); revenue_per_sector = merged_data.groupby('sector')['close_value'].sum().reset_index()",
        "difficulty": "medium",
        "subtype": "Multi-Column Analysis and Summarization",
        "type": "information retrieval",
        "table_path": "./datasets/business/crm/",
        "result": "Here's a summary of total revenue generated per sector based on 'Won' deals:\n\n1. Retail: $1,867,528\n2. Technology: $1,515,487\n3. Medical: $1,359,595\n4. Software: $1,077,934\n5. Finance: $950,908\n6. Marketing: $922,321\n7. Entertainment: $689,007\n8. Telecommunications: $653,574\n9. Services: $533,006\n10. Employment: $436,174\n\nKey observations:\n- Retail leads with the highest total revenue from won deals\n- Technology and Medical sectors follow closely\n- Employment sector has the lowest total revenue from won deals\n\nThe analysis was performed by:\n1. Merging the opportunities dataframe (df3) with the accounts dataframe (df2)\n2. Filtering for deals with 'Won' status\n3. Grouping by sector and summing the close values"
    },
    {
        "question": "Compute the average deal value for each product series.",
        "ground_truth": "GTK: 16024.48, GTX: 1186.32, MG: 979.69",
        "derivation": "merged_df = sales_pipeline_df.merge(products_df, left_on='product', right_on='product', how='inner'); average_deal_value = merged_df.groupby('series')['close_value'].mean().reset_index()",
        "difficulty": "hard",
        "subtype": "Multi-Column Analysis and Summarization",
        "type": "information retrieval",
        "table_path": "./datasets/business/crm/",
        "result": "The average deal values for each product series are:\n- GTK series: $16,024.48\n- GTX series: $1,186.32\n- MG series: $979.69"
    },
    {
        "question": "Identify the product that appears most frequently in 'Won' deals.",
        "ground_truth": "GTX Basic",
        "derivation": "won_product = sales_pipeline_df[sales_pipeline_df['deal_stage'] == 'Won']['product'].mode().iloc[0]; most_frequent_product_details = products_df[products_df['product'] == won_product]",
        "difficulty": "easy",
        "subtype": "Pattern and Trend Recognition",
        "type": "information retrieval",
        "table_path": "./datasets/business/crm/",
        "result": "GTX Basic is the product that appears most frequently in 'Won' deals, with 915 won deals."
    },
    {
        "question": "Analyze the average time taken to close deals based on product type.",
        "ground_truth": "Product: GTK 500, Average Days to Close: 53.72, Product: GTX Basic, Average Days to Close: 49.91, Product: GTX Plus Basic, Average Days to Close: 49.41, Product: GTX Plus Pro, Average Days to Close: 46.08, Product: GTXPro, Average Days to Close: 45.73, Product: MG Advanced, Average Days to Close: 47.12, Product: MG Special, Average Days to Close: 48.43",
        "derivation": "sales_data['engage_date'] = pd.to_datetime(sales_data['engage_date']); sales_data['close_date'] = pd.to_datetime(sales_data['close_date']); sales_data['days_to_close'] = (sales_data['close_date'] - sales_data['engage_date']).dt.days; average_closing_time = sales_data.groupby('product')['days_to_close'].mean().reset_index()",
        "difficulty": "medium",
        "subtype": "Pattern and Trend Recognition",
        "type": "information retrieval",
        "table_path": "./datasets/business/crm/",
        "result": "Based on the analysis of deal closure times across different product types:\n\n1. GTK 500 has the longest average deal closure time at 53.72 days\n2. GTXPro has the shortest average deal closure time at 45.73 days\n3. Most products take between 45-50 days to close\n\nDetailed breakdown of average days to close:\n- GTK 500: 53.72 days\n- GTX Basic: 49.91 days\n- GTX Plus Basic: 49.41 days\n- MG Special: 48.43 days\n- MG Advanced: 47.12 days\n- GTX Plus Pro: 46.08 days\n- GTXPro: 45.73 days\n\nThe analysis suggests that GTK 500 products take significantly longer to close compared to other product lines, which might indicate more complex sales cycles or additional negotiation requirements for this product type."
    },
    {
        "question": "Analyze the product with the highest win percentage of each region.",
        "ground_truth": "Central: GTX Plus Pro (Win Rate: 49.13%), East: GTXPro (Win Rate: 56.24%), West: GTX Plus Pro (Win Rate: 50.16%)",
        "derivation": "merged_data = pd.merge(sales_pipeline, sales_teams, on='sales_agent', how='left'); merged_data['won'] = merged_data['deal_stage'].apply(lambda x: 1 if x == 'Won' else 0); win_rate_by_region_product = (merged_data.groupby(['regional_office', 'product']).agg(total_deals=('deal_stage', 'count'), won_deals=('won', 'sum')).reset_index()); win_rate_by_region_product['win_rate'] = win_rate_by_region_product['won_deals'] / win_rate_by_region_product['total_deals']; highest_win_rate_by_region = (win_rate_by_region_product.loc[win_rate_by_region_product.groupby('regional_office')['win_rate'].idxmax()])",
        "difficulty": "hard",
        "subtype": "Pattern and Trend Recognition",
        "type": "information retrieval",
        "table_path": "./datasets/business/crm/",
        "result": "The analysis reveals the top-performing product by win percentage for each regional office:\n\n1. Central Region: \n   - Top Product: GTX Plus Pro\n   - Win Percentage: 49.13%\n\n2. East Region:\n   - Top Product: GTXPro\n   - Win Percentage: 56.24%\n\n3. West Region:\n   - Top Product: GTX Plus Pro\n   - Win Percentage: 50.16%\n\nKey Insights:\n- The East region shows the highest win percentage with GTXPro at 56.24%\n- Both Central and West regions have GTX Plus Pro as their top-performing product\n- Win percentages are relatively consistent across regions, ranging from 49% to 56%\n\nThis analysis provides valuable insights into product performance across different regional offices, which can help in strategic sales and marketing decisions."
    },
    {
        "question": "Group all accounts by sector and list the total deal value for each sector.",
        "ground_truth": "Employment: 436,174, Entertainment: 689,007, Finance: 950,908, Marketing: 922,321, Medical: 1,359,595",
        "derivation": "merged_deals_by_sector = sales_pipeline_df.merge(accounts_df, left_on='account', right_on='account', how='inner'); sector_deal_values = (merged_deals_by_sector.groupby('sector')['close_value'].sum().reset_index().rename(columns={'close_value': 'total_deal_value'}))",
        "difficulty": "easy",
        "subtype": "Data Aggregation, Grouping, and Classification",
        "type": "information retrieval",
        "table_path": "./datasets/business/crm/",
        "result": "I grouped the accounts by sector and calculated the total deal value for each sector, with the results shown in the observation above."
    },
    {
        "question": "Group the data by regional office and calculate the average deal close value.",
        "ground_truth": "Central: 1,285.06, East: 1,663.40, West: 1,586.77",
        "derivation": "merged_offices_deals = sales_pipeline_df.merge(sales_teams_df, left_on='sales_agent', right_on='sales_agent', how='inner'); average_close_value_by_office = merged_offices_deals.groupby('regional_office')['close_value'].mean().reset_index()",
        "difficulty": "medium",
        "subtype": "Data Aggregation, Grouping, and Classification",
        "type": "information retrieval",
        "table_path": "./datasets/business/crm/",
        "result": "The average deal close values by regional office are:\n- Central: $1,285.06\n- East: $1,663.40\n- West: $1,586.77"
    },
    {
        "question": "Aggregate sales agents by manager and determine the total revenue they collectively generated from 'Won' deals",
        "ground_truth": "Cara Losch: 1,130,049, Celia Rouche: 1,603,897, Dustin Brinkmann: 1,094,363, Melvin Marxen: 2,251,930, Rocco Neubert: 1,960,545, Summer Sewald: 1,964,750",
        "derivation": "merged_sales_pipeline = sales_pipeline_df.merge(sales_teams_df, on='sales_agent', how='inner'); won_deals_by_manager = merged_sales_pipeline[merged_sales_pipeline['deal_stage'] == 'Won'].groupby('manager')['close_value'].sum().reset_index()",
        "difficulty": "hard",
        "subtype": "Data Aggregation, Grouping, and Classification",
        "type": "information retrieval",
        "table_path": "./datasets/business/crm/",
        "result": "Here's the total revenue generated by sales agents for each manager from 'Won' deals:\n\n1. Melvin Marxen: $2,251,930\n2. Summer Sewald: $1,964,750\n3. Rocco Neubert: $1,960,545\n4. Celia Rouche: $1,603,897\n5. Cara Losch: $1,130,049\n6. Dustin Brinkmann: $1,094,363\n\nKey observations:\n- Melvin Marxen's team leads in total revenue generation with over $2.25 million in won deals\n- There's significant variation in team performance, with the top team generating about twice the revenue of the lowest-performing team\n- All managers have generated over $1 million in won deals\n\nThe analysis provides a clear view of each manager's collective sales performance based on closed deals."
    },
    {
        "question": "Rank the top 3 products based on the total close value of their deals",
        "ground_truth": "1. GTX Plus Pro: 2,629,651 2. MG Advanced: 2,216,387 3. GTX Plus Basic: 705,275",
        "derivation": "merged_products_deals = sales_pipeline_df.merge(products_df, left_on='product', right_on='product', how='inner'); product_close_values = merged_products_deals.groupby('product')['close_value'].sum().reset_index(); top_3_products = product_close_values.sort_values(by='close_value', ascending=False).head(3)",
        "difficulty": "easy",
        "subtype": "Comparison and Ranking",
        "type": "information retrieval",
        "table_path": "./datasets/business/crm/",
        "result": "The top 3 products ranked by total close value are:\n1. GTXPro\n2. GTX Plus Pro\n3. MG Advanced"
    },
    {
        "question": "Compare the total revenue generated by each region and identify the most profitable region.",
        "ground_truth": "Central: 3,346,293, East: 3,090,594, West: 3,568,647",
        "derivation": "region_revenue = merged_offices_deals.groupby('regional_office')['close_value'].sum().reset_index(); most_profitable_region = region_revenue.loc[region_revenue['close_value'].idxmax()]",
        "difficulty": "medium",
        "subtype": "Comparison and Ranking",
        "type": "information retrieval",
        "table_path": "./datasets/business/crm/",
        "result": "Based on the provided dataframes, we can only analyze the revenue for the Central region. The total revenue for the Central region is $10,005,534.\n\nKey observations:\n1. The sales agents dataframe (df4) only shows \"Central\" as the regional office\n2. All sales agents in the sample data are associated with the Central region\n3. By summing the close values of all deals, we calculated the total revenue for the Central region\n\nLimitations of the analysis:\n- The data does not provide information about other regions\n- We cannot compare multiple regions as requested in the original question\n- The analysis is based on the complete dataset of closed deals\n\nIf you want a more comprehensive regional comparison, additional data with multiple regional offices would be needed."
    },
    {
        "question": "Rank top 5 accounts by the number of Won deals they are associated with.",
        "ground_truth": "Kan-code: 115, Hottechi: 111, Konex: 108, Condax: 105, Rangreen: 75.",
        "derivation": "won_deals_by_account = sales_pipeline_df[sales_pipeline_df['deal_stage'] == 'Won'].groupby('account')['opportunity_id'].count().reset_index(); won_deals_by_account.rename(columns={'opportunity_id': 'won_deals_count'}, inplace=True);ranked_accounts = won_deals_by_account.sort_values(by='won_deals_count', ascending=False)",
        "difficulty": "hard",
        "subtype": "Comparison and Ranking",
        "type": "information retrieval",
        "table_path": "./datasets/business/crm/",
        "result": "Top 5 Accounts by Number of Won Deals:\n\n1. Kan-code\n   - Won Deals: 115\n   - Sector: Software\n   - Annual Revenue: $11,698.03 million\n   - Employees: 34,288\n\n2. Hottechi\n   - Won Deals: 111\n   - Sector: Technology\n   - Annual Revenue: $8,170.38 million\n   - Employees: 16,499\n\n3. Konex\n   - Won Deals: 108\n   - Sector: Technology\n   - Annual Revenue: $7,708.38 million\n   - Employees: 13,756\n\n4. Condax\n   - Won Deals: 105\n   - Sector: Medical\n   - Annual Revenue: $4.54 million\n   - Employees: 9\n\n5. Rangreen\n   - Won Deals: 75\n   - Sector: Technology\n   - Annual Revenue: $2,938.67 million\n   - Employees: 8,775\n\nInteresting observations:\n- Kan-code leads with the most won deals and has the highest revenue and employee count\n- Most top-performing accounts are in the technology sector\n- Condax stands out with significantly lower revenue and employees compared to the others, despite having many won deals"
    },
    {
        "question": "Give me a overview of the close rate of each sales person?",
        "ground_truth": "Kan-code: 115, Hottechi: 111, Konex: 108, Condax: 105, Rangreen: 75.",
        "derivation": "won_deals_by_account = sales_pipeline_df[sales_pipeline_df['deal_stage'] == 'Won'].groupby('account')['opportunity_id'].count().reset_index(); won_deals_by_account.rename(columns={'opportunity_id': 'won_deals_count'}, inplace=True);ranked_accounts = won_deals_by_account.sort_values(by='won_deals_count', ascending=False)",
        "difficulty": "easy",
        "subtype": "Summary and Reporting from Tables",
        "type": "information retrieval",
        "table_path": "./datasets/business/crm/",
        "result": "The close rates vary significantly across sales agents, ranging from 40.84% to 65.40%, with most performing around 45-50%. Reed Clapper, Garret Kinder, and Donn Cantrell are the top performers, while Lajuana Vencill, Gladys Colclough, and Markita Hansen have the lowest close rates."
    },
    {
        "question": "Give me a split of percentage of deals in each stage",
        "ground_truth": "Won: 33.3%, Engaged: 40.2%, Lost: 26.5%",
        "derivation": "deal_stage_split_percentage = sales_pipeline_df['deal_stage'].value_counts(normalize=True) * 100",
        "difficulty": "medium",
        "subtype": "Summary and Reporting from Tables",
        "type": "information retrieval",
        "table_path": "./datasets/business/crm/",
        "result": "The percentage split of deals in each stage is:\n- Won: 48.16%\n- Lost: 28.10%\n- Engaging: 18.06%\n- Prospecting: 5.68%"
    },
    {
        "question": "Which combination of product, region, and sales agent maximizes deal win rate",
        "ground_truth": "Won: 33.3%, Engaged: 40.2%, Lost: 26.5%",
        "derivation": "pipeline_full = pd.merge(pd.merge(sales_pipeline,products,on='product'),sales_teams,on='sales_agent); win_rate_data = pipeline_full.groupby(['product','regional_office','sales_agent']).agg(total_deals=('opportunity_id','count'),won_deals=('deal_stage',lambda x:(x=='Won').sum())).reset_index(); win_rate_data['win_rate'] = win_rate_data['won_deals'] / win_rate_data['total_deals']; win_rate_data.loc[win_rate_data['win_rate'].idxmax()]",
        "difficulty": "hard",
        "subtype": "Summary and Reporting from Tables",
        "type": "information retrieval",
        "table_path": "./datasets/business/crm/",
        "result": "The combination of MG Special product, East region, and Reed Clapper as the sales agent maximizes the deal win rate at 78.95%."
    }
]